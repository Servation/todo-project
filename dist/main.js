(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody,\nhtml {\n  width: 100%;\n  height: 100%;\n}\n\n#content {\n  display: grid;\n  grid-template-columns: min-content auto;\n  grid-template-rows: min-content max-content;\n  min-height: 100%;\n}\n\n#title-bar {\n  grid-column-start: 1;\n  grid-column-end: end;\n  background-color: cornflowerblue;\n  padding: 20px;\n}\n#side-bar {\n  grid-row-end: last-line;\n  grid-row-start: 2;\n  background-color: azure;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n}\n\n#main {\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  grid-column-start: 2;\n  grid-column-end: end;\n  grid-row-start: 2;\n  grid-row-end: last-line;\n  background-color: cadetblue;\n}\n\n.addButton {\n  font-size: 3em;\n  color: black;\n  text-decoration: none;\n  padding: 0px 20px;\n  background-color: cornflowerblue;\n  border: 3px solid cadetblue;\n  border-radius: 20px/50px;\n  text-align: center;\n}\n.addButton:hover {\n  background-color: cadetblue;\n  color: azure;\n  border-color: cornflowerblue;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.7);\n  transition: opacity 500ms;\n  visibility: hidden;\n  opacity: 0;\n}\n.overlay:target {\n  visibility: visible;\n  opacity: 1;\n}\n\n.popup {\n  margin: 10% auto;\n  padding: 20px;\n  background: #fff;\n  border-radius: 5px;\n  width: 450px;\n  position: relative;\n  transition: all 2s ease-in-out;\n}\n\n.popup .close {\n  position: absolute;\n  top: 10px;\n  right: 20px;\n  transition: all 200ms;\n  font-size: 30px;\n  font-weight: bold;\n  text-decoration: none;\n  color: #333;\n}\n.popup .close:hover {\n  color: #06d85f;\n}\ntextarea {\n  resize: none;\n}\n\n#optionsContent {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.singleTodo {\n  background-color: cornflowerblue;\n  height: 250px;\n  width: 350px;\n  margin: 10px;\n  padding: 10px;\n  border: 5px solid azure;\n  border-radius: 10px;\n}\n\n.todo-links:hover {\n  cursor: pointer;\n  color: cornflowerblue;\n}\n\n@media screen and (max-width: 700px) {\n  .box {\n    width: 70%;\n  }\n  .popup {\n    width: 70%;\n  }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;;EAEE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC,2CAA2C;EAC3C,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;EACpB,oBAAoB;EACpB,gCAAgC;EAChC,aAAa;AACf;AACA;EACE,uBAAuB;EACvB,iBAAiB;EACjB,uBAAuB;EACvB,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,yBAAyB;EACzB,oBAAoB;EACpB,oBAAoB;EACpB,iBAAiB;EACjB,uBAAuB;EACvB,2BAA2B;AAC7B;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,qBAAqB;EACrB,iBAAiB;EACjB,gCAAgC;EAChC,2BAA2B;EAC3B,wBAAwB;EACxB,kBAAkB;AACpB;AACA;EACE,2BAA2B;EAC3B,YAAY;EACZ,4BAA4B;AAC9B;;AAEA;EACE,eAAe;EACf,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;EACR,8BAA8B;EAC9B,yBAAyB;EACzB,kBAAkB;EAClB,UAAU;AACZ;AACA;EACE,mBAAmB;EACnB,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,gBAAgB;EAChB,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB,8BAA8B;AAChC;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,qBAAqB;EACrB,eAAe;EACf,iBAAiB;EACjB,qBAAqB;EACrB,WAAW;AACb;AACA;EACE,cAAc;AAChB;AACA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,gCAAgC;EAChC,aAAa;EACb,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,qBAAqB;AACvB;;AAEA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody,\nhtml {\n  width: 100%;\n  height: 100%;\n}\n\n#content {\n  display: grid;\n  grid-template-columns: min-content auto;\n  grid-template-rows: min-content max-content;\n  min-height: 100%;\n}\n\n#title-bar {\n  grid-column-start: 1;\n  grid-column-end: end;\n  background-color: cornflowerblue;\n  padding: 20px;\n}\n#side-bar {\n  grid-row-end: last-line;\n  grid-row-start: 2;\n  background-color: azure;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n}\n\n#main {\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  grid-column-start: 2;\n  grid-column-end: end;\n  grid-row-start: 2;\n  grid-row-end: last-line;\n  background-color: cadetblue;\n}\n\n.addButton {\n  font-size: 3em;\n  color: black;\n  text-decoration: none;\n  padding: 0px 20px;\n  background-color: cornflowerblue;\n  border: 3px solid cadetblue;\n  border-radius: 20px/50px;\n  text-align: center;\n}\n.addButton:hover {\n  background-color: cadetblue;\n  color: azure;\n  border-color: cornflowerblue;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.7);\n  transition: opacity 500ms;\n  visibility: hidden;\n  opacity: 0;\n}\n.overlay:target {\n  visibility: visible;\n  opacity: 1;\n}\n\n.popup {\n  margin: 10% auto;\n  padding: 20px;\n  background: #fff;\n  border-radius: 5px;\n  width: 450px;\n  position: relative;\n  transition: all 2s ease-in-out;\n}\n\n.popup .close {\n  position: absolute;\n  top: 10px;\n  right: 20px;\n  transition: all 200ms;\n  font-size: 30px;\n  font-weight: bold;\n  text-decoration: none;\n  color: #333;\n}\n.popup .close:hover {\n  color: #06d85f;\n}\ntextarea {\n  resize: none;\n}\n\n#optionsContent {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.singleTodo {\n  background-color: cornflowerblue;\n  height: 250px;\n  width: 350px;\n  margin: 10px;\n  padding: 10px;\n  border: 5px solid azure;\n  border-radius: 10px;\n}\n\n.todo-links:hover {\n  cursor: pointer;\n  color: cornflowerblue;\n}\n\n@media screen and (max-width: 700px) {\n  .box {\n    width: 70%;\n  }\n  .popup {\n    width: 70%;\n  }\n}\n"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);o&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],c=0;c<n.length;c++){var d=n[c],l=o.base?d[0]+o.base:d[0],A=i[l]||0,s="".concat(l," ").concat(A);i[l]=A+1;var u=t(s),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var E=r(p,o);o.byIndex=c,e.splice(c,0,{identifier:s,updater:E,references:1})}a.push(s)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var d=o(n,r),l=0;l<i.length;l++){var A=t(i[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),a=t.n(i),c=t(565),d=t.n(c),l=t(216),A=t.n(l),s=t(589),u=t.n(s),p=t(426),E={};E.styleTagTransform=u(),E.setAttributes=d(),E.insert=a().bind(null,"head"),E.domAPI=r(),E.insertStyleElement=A(),e()(p.Z,E),p.Z&&p.Z.locals&&p.Z.locals;let C,m=[],g=[],B=0,f=!1;function b(n,e,t,o,r,i){let a=new class{constructor(n,e,t,o,r,i,a=!1){this.title=n,this.description=e,this.dueDate=t,this.priority=o,this.project=r,this.todoID=i,this.complete=a}toggleComplete(){this.complete?this.complete=!1:this.complete=!0}}(n,e,t,o,r,i);m.push(a)}function h(n){let e=document.createElement("div");e.setAttribute("id",String(n.todoID)),e.setAttribute("class","singleTodo");let t=n.title,o=n.description,r=n.dueDate,i=n.priority,a=n.project,c=(n.todoID,document.createElement("button"));c.textContent="INCOMPELETE",n.complete?(e.style.backgroundColor="gray",e.style.color="white",c.textContent="COMPELETED"):(e.style.backgroundColor="cornflowerblue",e.style.color="black",c.textContent="INCOMPELETE"),c.addEventListener("click",(()=>{n.toggleComplete(),v()}));let d=document.createElement("button");d.textContent="Edit",d.addEventListener("click",(()=>{f=!0,document.getElementById("addButton").click();let e=document.getElementById("title"),t=document.getElementById("description"),o=document.getElementById("dueDate"),r=document.getElementById("priority"),i=document.getElementById("project");e.value=n.title,t.value=n.description,o.value=n.dueDate,r.value=n.priority,i.value=n.project,C=n}));let l=document.createElement("button");return l.textContent="DELETE",l.addEventListener("click",(()=>{m=m.filter((e=>e.todoID!==n.todoID)),v()})),e.appendChild(function(n,e,t,o,r,i){let a=document.createElement("div"),c=document.createElement("h3");if(c.textContent=n,a.setAttribute("class","todoContentEl"),a.appendChild(c),""!=e){let n=document.createElement("p");n.textContent=`Description: ${e}`,n.setAttribute("class","todoDescription"),a.appendChild(n)}if(""!=t){let n=document.createElement("div");n.textContent=`Due: ${t}`,n.setAttribute("class","todoDueDate"),a.appendChild(n)}let d=document.createElement("div");if(d.textContent=`Priority: ${o}`,d.setAttribute("class","todoPrio"),a.appendChild(d),""!=r){let n=document.createElement("div");n.textContent=`Project: ${r}`,n.setAttribute("class","todoProjec"),a.appendChild(n)}return a}(t,o,r,i,a)),e.appendChild(d),e.appendChild(c),e.appendChild(l),e}function v(){const n=document.getElementById("main");for(;n.firstChild;)n.removeChild(n.lastChild);m.forEach((e=>{n.appendChild(h(e))})),function(){const n=document.getElementById("showProjects"),e=document.getElementById("main");for(g=function(){let n=[];return m.forEach((e=>{n.includes(e.project)||n.push(e.project)})),n}();n.firstChild;)n.removeChild(n.lastChild);g.forEach((t=>{let o=document.createElement("div");o.setAttribute("class","todo-links"),o.textContent=t,o.addEventListener("click",(()=>{for(;e.firstChild;)e.removeChild(e.lastChild);m.forEach((n=>{n.project==t&&e.appendChild(h(n))}))})),n.appendChild(o)}))}()}function x(){document.getElementById("title").value="",document.getElementById("description").value="",document.getElementById("dueDate").value="",document.getElementById("priority").value="Low",document.getElementById("project").value=""}b("Todo project","A project from Odin project","2022-01-19","Medium","Odin Project",1290129),(()=>{const n=document.getElementById("submitButton"),e=document.getElementsByClassName("close"),t=document.getElementById("title"),o=document.getElementById("all");n.addEventListener("click",(function(){!function(n){n=n||{};const e=document.getElementById("title");let t=document.getElementsByClassName("close")[0],o=document.getElementById("description").value,r=document.getElementById("dueDate").value,i=document.getElementById("priority").value,a=document.getElementById("project").value,c=e.value,d=function(n){return""!==n}(c);d&&!f?(b(c,o,r,i,a,B),t.click(),B++,e.style.backgroundColor="white",x()):d&&f?(function(n,e,t,o,r,i){i.title=n,i.description=e,i.dueDate=t,i.priority=o,i.project=r}(c,o,r,i,a,n),t.click()):e.style.backgroundColor="pink",f=!1}(C),v()})),e[0].addEventListener("click",(function(){t.style.backgroundColor="white",x()})),o.addEventListener("click",v),v()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,