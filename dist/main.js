(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody,\nhtml {\n  width: 100%;\n  height: 100%;\n}\n\n#content {\n  display: grid;\n  grid-template-columns: min-content auto;\n  grid-template-rows: min-content max-content;\n  min-height: 100%;\n}\n\n#title-bar {\n  grid-column-start: 1;\n  grid-column-end: end;\n  background-color: cornflowerblue;\n  padding: 20px;\n}\n#side-bar {\n  grid-row-end: last-line;\n  grid-row-start: 2;\n  background-color: azure;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n}\n\n#main {\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  grid-column-start: 2;\n  grid-column-end: end;\n  grid-row-start: 2;\n  grid-row-end: last-line;\n  background-color: cadetblue;\n}\n\n.addButton {\n  font-size: 3em;\n  color: black;\n  text-decoration: none;\n  padding: 0px 20px;\n  background-color: cornflowerblue;\n  border: 3px solid cadetblue;\n  border-radius: 20px/50px;\n  text-align: center;\n}\n.addButton:hover {\n  background-color: cadetblue;\n  color: azure;\n  border-color: cornflowerblue;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.7);\n  transition: opacity 500ms;\n  visibility: hidden;\n  opacity: 0;\n}\n.overlay:target {\n  visibility: visible;\n  opacity: 1;\n}\n\n.popup {\n  margin: 10% auto;\n  padding: 20px;\n  background: #fff;\n  border-radius: 5px;\n  width: 450px;\n  position: relative;\n  transition: all 2s ease-in-out;\n}\n\n.popup .close {\n  position: absolute;\n  top: 10px;\n  right: 20px;\n  transition: all 200ms;\n  font-size: 30px;\n  font-weight: bold;\n  text-decoration: none;\n  color: #333;\n}\n.popup .close:hover {\n  color: #06d85f;\n}\ntextarea {\n  resize: none;\n}\n\n#optionsContent {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.singleTodo {\n  background-color: cornflowerblue;\n  height: 250px;\n  width: 350px;\n  margin: 10px;\n  padding: 10px;\n  border: 5px solid azure;\n  border-radius: 10px;\n}\n\n@media screen and (max-width: 700px) {\n  .box {\n    width: 70%;\n  }\n  .popup {\n    width: 70%;\n  }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;;EAEE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC,2CAA2C;EAC3C,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;EACpB,oBAAoB;EACpB,gCAAgC;EAChC,aAAa;AACf;AACA;EACE,uBAAuB;EACvB,iBAAiB;EACjB,uBAAuB;EACvB,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,yBAAyB;EACzB,oBAAoB;EACpB,oBAAoB;EACpB,iBAAiB;EACjB,uBAAuB;EACvB,2BAA2B;AAC7B;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,qBAAqB;EACrB,iBAAiB;EACjB,gCAAgC;EAChC,2BAA2B;EAC3B,wBAAwB;EACxB,kBAAkB;AACpB;AACA;EACE,2BAA2B;EAC3B,YAAY;EACZ,4BAA4B;AAC9B;;AAEA;EACE,eAAe;EACf,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;EACR,8BAA8B;EAC9B,yBAAyB;EACzB,kBAAkB;EAClB,UAAU;AACZ;AACA;EACE,mBAAmB;EACnB,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,gBAAgB;EAChB,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB,8BAA8B;AAChC;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,qBAAqB;EACrB,eAAe;EACf,iBAAiB;EACjB,qBAAqB;EACrB,WAAW;AACb;AACA;EACE,cAAc;AAChB;AACA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,gCAAgC;EAChC,aAAa;EACb,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody,\nhtml {\n  width: 100%;\n  height: 100%;\n}\n\n#content {\n  display: grid;\n  grid-template-columns: min-content auto;\n  grid-template-rows: min-content max-content;\n  min-height: 100%;\n}\n\n#title-bar {\n  grid-column-start: 1;\n  grid-column-end: end;\n  background-color: cornflowerblue;\n  padding: 20px;\n}\n#side-bar {\n  grid-row-end: last-line;\n  grid-row-start: 2;\n  background-color: azure;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n}\n\n#main {\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  grid-column-start: 2;\n  grid-column-end: end;\n  grid-row-start: 2;\n  grid-row-end: last-line;\n  background-color: cadetblue;\n}\n\n.addButton {\n  font-size: 3em;\n  color: black;\n  text-decoration: none;\n  padding: 0px 20px;\n  background-color: cornflowerblue;\n  border: 3px solid cadetblue;\n  border-radius: 20px/50px;\n  text-align: center;\n}\n.addButton:hover {\n  background-color: cadetblue;\n  color: azure;\n  border-color: cornflowerblue;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.7);\n  transition: opacity 500ms;\n  visibility: hidden;\n  opacity: 0;\n}\n.overlay:target {\n  visibility: visible;\n  opacity: 1;\n}\n\n.popup {\n  margin: 10% auto;\n  padding: 20px;\n  background: #fff;\n  border-radius: 5px;\n  width: 450px;\n  position: relative;\n  transition: all 2s ease-in-out;\n}\n\n.popup .close {\n  position: absolute;\n  top: 10px;\n  right: 20px;\n  transition: all 200ms;\n  font-size: 30px;\n  font-weight: bold;\n  text-decoration: none;\n  color: #333;\n}\n.popup .close:hover {\n  color: #06d85f;\n}\ntextarea {\n  resize: none;\n}\n\n#optionsContent {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.singleTodo {\n  background-color: cornflowerblue;\n  height: 250px;\n  width: 350px;\n  margin: 10px;\n  padding: 10px;\n  border: 5px solid azure;\n  border-radius: 10px;\n}\n\n@media screen and (max-width: 700px) {\n  .box {\n    width: 70%;\n  }\n  .popup {\n    width: 70%;\n  }\n}\n"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],d=o.base?c[0]+o.base:c[0],l=i[d]||0,s="".concat(d," ").concat(l);i[d]=l+1;var p=t(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var C=r(u,o);o.byIndex=A,e.splice(A,0,{identifier:s,updater:C,references:1})}a.push(s)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var c=o(n,r),d=0;d<i.length;d++){var l=t(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),a=t.n(i),A=t(565),c=t.n(A),d=t(216),l=t.n(d),s=t(589),p=t.n(s),u=t(426),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=a().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=l(),e()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;let E=[],m=0;function g(n,e,t,o,r,i){let a=new class{constructor(n,e,t,o,r,i,a=!1){this.title=n,this.description=e,this.dueDate=t,this.priority=o,this.project=r,this.todoID=i,this.complete=a}toggleComplete(){this.complete?this.complete=!1:this.complete=!0}}(n,e,t,o,r,i);E.push(a)}function B(){const n=document.getElementById("main");for(;n.firstChild;)n.removeChild(n.lastChild);E.forEach((e=>{let t=document.createElement("div");t.setAttribute("id",String(e.todoID)),t.setAttribute("class","singleTodo");let o=e.title,r=e.description,i=e.dueDate,a=e.priority,A=e.project,c=(e.todoID,document.createElement("button"));c.textContent="INCOMPELETE",e.complete?(t.style.backgroundColor="gray",c.textContent="COMPELETED"):(t.style.backgroundColor="cornflowerblue",c.textContent="INCOMPELETE"),c.addEventListener("click",(()=>{e.toggleComplete(),B()}));let d=document.createElement("button");d.textContent="DELETE",d.addEventListener("click",(()=>{E=E.filter((n=>n.todoID!==e.todoID)),B()})),t.appendChild(function(n,e,t,o,r,i){let a=document.createElement("div"),A=document.createElement("h1");if(A.textContent=n,A.setAttribute("class","todoTitle"),a.appendChild(A),""!=e){let n=document.createElement("p");n.textContent=`Description: ${e}`,n.setAttribute("class","todoDescription"),a.appendChild(n)}if(""!=t){let n=document.createElement("div");n.textContent=`Due: ${t}`,n.setAttribute("class","todoDueDate"),a.appendChild(n)}let c=document.createElement("div");if(c.textContent=`Priority: ${o}`,c.setAttribute("class","todoPrio"),a.appendChild(c),""!=r){let n=document.createElement("div");n.textContent=`Project: ${r}`,n.setAttribute("class","todoProjec"),a.appendChild(n)}return a}(o,r,i,a,A)),t.appendChild(c),t.appendChild(d),n.appendChild(t)}))}g("Todo project","A project from Odin project","2022-01-19","Medium","Odin Project",1290129),(()=>{document.getElementById("submitButton").addEventListener("click",(function(){!function(){const n=document.getElementById("title");let e=document.getElementsByClassName("close")[0],t=document.getElementById("description").value,o=document.getElementById("dueDate").value,r=document.getElementById("priority").value,i=document.getElementById("project").value,a=n.value,A=function(n){return""!==n}(a);A?(g(a,t,o,r,i,m),e.click(),m++,n.style.backgroundColor="white"):n.style.backgroundColor="pink"}(),B()}));const n=document.getElementsByClassName("close"),e=document.getElementById("title");n[0].addEventListener("click",(function(){e.style.backgroundColor="white"})),B()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,